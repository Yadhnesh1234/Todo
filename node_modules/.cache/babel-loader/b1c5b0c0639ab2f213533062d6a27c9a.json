{"ast":null,"code":"var _jsxFileName = \"/home/yadhnesh/React App/react-redux-typescript/src/App/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { Container, ListGroup, ListGroupItem, InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { deleteTodo, markComplete, markIncomplete } from \"action/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = _ref => {\n  _s();\n\n  let {\n    complete,\n    incomplete,\n    deleteTodo,\n    markComplete,\n    markIncomplete\n  } = _ref;\n  const input = useRef(null);\n\n  const renderList = type => {\n    const looper = type === \"Complete\" ? complete : incomplete;\n    return /*#__PURE__*/_jsxDEV(ListGroup, {\n      variant: \"flush\",\n      className: \"m-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), looper.map((todo, index) => {\n        return /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          variant: type === \"Complete\" ? \"success\" : \"danger\",\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: todo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: `fas fa-${type === \"Complete\" ? \"minus\" : \"check\"} m-2`,\n              onClick: () => {\n                type === \"Complete\" ? markIncomplete(todo) : markComplete(todo);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-trash m-2\",\n              onClick: () => deleteTodo(todo)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 8\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this);\n  };\n\n  const addTodo = () => {\n    if (input.current) {\n      const val = input.current.value;\n      input.current.value = \"\";\n      markIncomplete(val);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"m-3\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        placeholder: \"Todo\",\n        ref: input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => addTodo(),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus mr-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this), \"Add\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), renderList(\"Incomplete\"), renderList(\"Complete\")]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"nlIcl0voJvDyuV7TOciSdgd9B4g=\");\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    complete: state.complete,\n    incomplete: state.incomplete\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteTodo,\n  markComplete,\n  markIncomplete\n})(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","Container","ListGroup","ListGroupItem","InputGroup","FormControl","Button","connect","deleteTodo","markComplete","markIncomplete","App","complete","incomplete","input","renderList","type","looper","map","todo","index","display","justifyContent","addTodo","current","val","value","mapStateToProps","state"],"sources":["/home/yadhnesh/React App/react-redux-typescript/src/App/App.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\n\nimport {\n\tContainer,\n\tListGroup,\n\tListGroupItem,\n\tInputGroup,\n\tFormControl,\n\tButton,\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nimport { deleteTodo, markComplete, markIncomplete } from \"action/index\";\nimport storeType from \"types/storeType\";\nimport AppPropType from \"./AppPropType\";\n\nconst App: React.FC<AppPropType> = ({\n\tcomplete,\n\tincomplete,\n\tdeleteTodo,\n\tmarkComplete,\n\tmarkIncomplete,\n}) => {\n\tconst input = useRef<HTMLInputElement>(null);\n\n\tconst renderList = (type: \"Complete\" | \"Incomplete\") => {\n\t\tconst looper = type === \"Complete\" ? complete : incomplete;\n\t\treturn (\n\t\t\t<ListGroup variant=\"flush\" className=\"m-2\">\n\t\t\t\t<h3>{type}</h3>\n\t\t\t\t{looper.map((todo, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListGroupItem\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tvariant={type === \"Complete\" ? \"success\" : \"danger\"}\n\t\t\t\t\t\t\tstyle={{ display: \"flex\", justifyContent: \"space-between\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div>{todo}</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tclassName={`fas fa-${\n\t\t\t\t\t\t\t\t\t\ttype === \"Complete\" ? \"minus\" : \"check\"\n\t\t\t\t\t\t\t\t\t} m-2`}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\ttype === \"Complete\"\n\t\t\t\t\t\t\t\t\t\t\t? markIncomplete(todo)\n\t\t\t\t\t\t\t\t\t\t\t: markComplete(todo);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t></i>\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tclassName=\"fas fa-trash m-2\"\n\t\t\t\t\t\t\t\t\tonClick={() => deleteTodo(todo)}\n\t\t\t\t\t\t\t\t></i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ListGroup>\n\t\t);\n\t};\n\n\tconst addTodo = () => {\n\t\tif (input.current) {\n\t\t\tconst val = input.current.value;\n\t\t\tinput.current.value = \"\";\n\t\t\tmarkIncomplete(val);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<InputGroup className=\"m-3\">\n\t\t\t\t<FormControl placeholder=\"Todo\" ref={input} />\n\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={() => addTodo()}>\n\t\t\t\t\t\t<i className=\"fas fa-plus mr-3\"></i>\n\t\t\t\t\t\tAdd\n\t\t\t\t\t</Button>\n\t\t\t\t</InputGroup.Append>\n\t\t\t</InputGroup>\n\t\t\t{renderList(\"Incomplete\")}\n\t\t\t{renderList(\"Complete\")}\n\t\t</Container>\n\t);\n};\n\nconst mapStateToProps = (state: storeType) => {\n\treturn {\n\t\tcomplete: state.complete,\n\t\tincomplete: state.incomplete,\n\t};\n};\n\nexport default connect(mapStateToProps, {\n\tdeleteTodo,\n\tmarkComplete,\n\tmarkIncomplete,\n})(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}